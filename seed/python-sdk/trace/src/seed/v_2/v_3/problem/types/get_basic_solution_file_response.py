# This file was auto-generated by Rapiddocs from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .....commons.types.language import Language
from .file_info_v_2 import FileInfoV2
from .....core.serialization import FieldMetadata
from .....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class GetBasicSolutionFileResponse(UniversalBaseModel):
    solution_file_by_language: typing_extensions.Annotated[
        typing.Dict[Language, FileInfoV2], FieldMetadata(alias="solutionFileByLanguage")
    ]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
