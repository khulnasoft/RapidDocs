{
    "endpoints": [
        {
            "id": {
                "path": "/apiKey",
                "method": "GET",
                "identifier_override": "endpoint_service.getWithApiKey"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\trapiddocsclient \"github.com/auth-environment-variables/rapiddocs/client\"\n\toption \"github.com/auth-environment-variables/rapiddocs/option\"\n)\n\nclient := rapiddocsclient.NewClient(\n\toption.WithApiKey(\n\t\t\"\u003cYOUR_ApiKey\u003e\",\n\t),\n)\nresponse, err := client.Service.GetWithApiKey(\n\tcontext.TODO(),\n)\n"
            }
        },
        {
            "id": {
                "path": "/apiKeyInHeader",
                "method": "GET",
                "identifier_override": "endpoint_service.getWithHeader"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\trapiddocs \"github.com/auth-environment-variables/rapiddocs\"\n\trapiddocsclient \"github.com/auth-environment-variables/rapiddocs/client\"\n\toption \"github.com/auth-environment-variables/rapiddocs/option\"\n)\n\nclient := rapiddocsclient.NewClient(\n\toption.WithApiKey(\n\t\t\"\u003cYOUR_ApiKey\u003e\",\n\t),\n)\nresponse, err := client.Service.GetWithHeader(\n\tcontext.TODO(),\n\t\u0026rapiddocs.HeaderAuthRequest{\n\t\tXEndpointHeader: \"X-Endpoint-Header\",\n\t},\n)\n"
            }
        }
    ]
}