/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as serializers from "../../../index";
import * as RapiddocsIr from "../../../../api/index";
import * as core from "../../../../core";
import { FilePropertySingle } from "./FilePropertySingle";
import { FilePropertyArray } from "./FilePropertyArray";

export const FileProperty: core.serialization.Schema<serializers.FileProperty.Raw, RapiddocsIr.FileProperty> =
    core.serialization
        .union("type", {
            file: FilePropertySingle,
            fileArray: FilePropertyArray,
        })
        .transform<RapiddocsIr.FileProperty>({
            transform: (value) => {
                switch (value.type) {
                    case "file":
                        return RapiddocsIr.FileProperty.file(value);
                    case "fileArray":
                        return RapiddocsIr.FileProperty.fileArray(value);
                    default:
                        return value as RapiddocsIr.FileProperty;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace FileProperty {
    export type Raw = FileProperty.File | FileProperty.FileArray;

    export interface File extends FilePropertySingle.Raw {
        type: "file";
    }

    export interface FileArray extends FilePropertyArray.Raw {
        type: "fileArray";
    }
}
