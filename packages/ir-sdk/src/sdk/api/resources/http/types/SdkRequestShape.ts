/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as RapiddocsIr from "../../../index";

export type SdkRequestShape = RapiddocsIr.SdkRequestShape.JustRequestBody | RapiddocsIr.SdkRequestShape.Wrapper;

export namespace SdkRequestShape {
    export interface JustRequestBody extends _Utils {
        type: "justRequestBody";
        value: RapiddocsIr.SdkRequestBodyType;
    }

    export interface Wrapper extends RapiddocsIr.SdkRequestWrapper, _Utils {
        type: "wrapper";
    }

    export interface _Utils {
        _visit: <_Result>(visitor: RapiddocsIr.SdkRequestShape._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        justRequestBody: (value: RapiddocsIr.SdkRequestBodyType) => _Result;
        wrapper: (value: RapiddocsIr.SdkRequestWrapper) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const SdkRequestShape = {
    justRequestBody: (value: RapiddocsIr.SdkRequestBodyType): RapiddocsIr.SdkRequestShape.JustRequestBody => {
        return {
            value: value,
            type: "justRequestBody",
            _visit: function <_Result>(
                this: RapiddocsIr.SdkRequestShape.JustRequestBody,
                visitor: RapiddocsIr.SdkRequestShape._Visitor<_Result>,
            ) {
                return RapiddocsIr.SdkRequestShape._visit(this, visitor);
            },
        };
    },

    wrapper: (value: RapiddocsIr.SdkRequestWrapper): RapiddocsIr.SdkRequestShape.Wrapper => {
        return {
            ...value,
            type: "wrapper",
            _visit: function <_Result>(
                this: RapiddocsIr.SdkRequestShape.Wrapper,
                visitor: RapiddocsIr.SdkRequestShape._Visitor<_Result>,
            ) {
                return RapiddocsIr.SdkRequestShape._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: RapiddocsIr.SdkRequestShape, visitor: RapiddocsIr.SdkRequestShape._Visitor<_Result>): _Result => {
        switch (value.type) {
            case "justRequestBody":
                return visitor.justRequestBody(value.value);
            case "wrapper":
                return visitor.wrapper(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
