/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as RapiddocsIr from "../../../index";

export type Transport = RapiddocsIr.Transport.Http | RapiddocsIr.Transport.Grpc;

export namespace Transport {
    export interface Http extends _Utils {
        type: "http";
    }

    export interface Grpc extends RapiddocsIr.GrpcTransport, _Utils {
        type: "grpc";
    }

    export interface _Utils {
        _visit: <_Result>(visitor: RapiddocsIr.Transport._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        http: () => _Result;
        grpc: (value: RapiddocsIr.GrpcTransport) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const Transport = {
    http: (): RapiddocsIr.Transport.Http => {
        return {
            type: "http",
            _visit: function <_Result>(this: RapiddocsIr.Transport.Http, visitor: RapiddocsIr.Transport._Visitor<_Result>) {
                return RapiddocsIr.Transport._visit(this, visitor);
            },
        };
    },

    grpc: (value: RapiddocsIr.GrpcTransport): RapiddocsIr.Transport.Grpc => {
        return {
            ...value,
            type: "grpc",
            _visit: function <_Result>(this: RapiddocsIr.Transport.Grpc, visitor: RapiddocsIr.Transport._Visitor<_Result>) {
                return RapiddocsIr.Transport._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: RapiddocsIr.Transport, visitor: RapiddocsIr.Transport._Visitor<_Result>): _Result => {
        switch (value.type) {
            case "http":
                return visitor.http();
            case "grpc":
                return visitor.grpc(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
