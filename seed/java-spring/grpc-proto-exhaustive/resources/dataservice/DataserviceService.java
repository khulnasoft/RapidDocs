/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

package resources.dataservice;

import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import resources.dataservice.requests.DeleteRequest;
import resources.dataservice.requests.DescribeRequest;
import resources.dataservice.requests.QueryRequest;
import resources.dataservice.requests.UpdateRequest;
import resources.dataservice.requests.UploadRequest;
import types.DeleteResponse;
import types.DescribeResponse;
import types.FetchResponse;
import types.ListResponse;
import types.QueryResponse;
import types.UpdateResponse;
import types.UploadResponse;

@RequestMapping(
    path = "/"
)
public interface DataserviceService {
  @PostMapping(
      value = "/data",
      produces = "application/json",
      consumes = "application/json"
  )
  UploadResponse upload(@RequestBody UploadRequest body);

  @PostMapping(
      value = "/data/delete",
      produces = "application/json",
      consumes = "application/json"
  )
  DeleteResponse delete(@RequestBody DeleteRequest body);

  @PostMapping(
      value = "/data/describe",
      produces = "application/json",
      consumes = "application/json"
  )
  DescribeResponse describe(@RequestBody DescribeRequest body);

  @GetMapping(
      value = "/data/fetch",
      produces = "application/json"
  )
  FetchResponse fetch(@RequestParam("ids") Optional<String> ids,
      @RequestParam("namespace") Optional<String> namespace);

  @GetMapping(
      value = "/data/list",
      produces = "application/json"
  )
  ListResponse list(@RequestParam("prefix") Optional<String> prefix,
      @RequestParam("limit") Optional<Integer> limit,
      @RequestParam("paginationToken") Optional<String> paginationToken,
      @RequestParam("namespace") Optional<String> namespace);

  @PostMapping(
      value = "/data/query",
      produces = "application/json",
      consumes = "application/json"
  )
  QueryResponse query(@RequestBody QueryRequest body);

  @PostMapping(
      value = "/data/update",
      produces = "application/json",
      consumes = "application/json"
  )
  UpdateResponse update(@RequestBody UpdateRequest body);
}
