/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as RapiddocsIr from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { SingleDiscriminatedUnionTypeObject } from "./SingleDiscriminatedUnionTypeObject";
import { SingleDiscriminatedUnionTypeSingleProperty } from "./SingleDiscriminatedUnionTypeSingleProperty";
import { SingleDiscriminatedUnionTypeNoProperties } from "./SingleDiscriminatedUnionTypeNoProperties";

export const SingleDiscriminatedUnionType: core.serialization.Schema<
    serializers.dynamic.SingleDiscriminatedUnionType.Raw,
    RapiddocsIr.dynamic.SingleDiscriminatedUnionType
> = core.serialization
    .union("type", {
        samePropertiesAsObject: SingleDiscriminatedUnionTypeObject,
        singleProperty: SingleDiscriminatedUnionTypeSingleProperty,
        noProperties: SingleDiscriminatedUnionTypeNoProperties,
    })
    .transform<RapiddocsIr.dynamic.SingleDiscriminatedUnionType>({
        transform: (value) => {
            switch (value.type) {
                case "samePropertiesAsObject":
                    return RapiddocsIr.dynamic.SingleDiscriminatedUnionType.samePropertiesAsObject(value);
                case "singleProperty":
                    return RapiddocsIr.dynamic.SingleDiscriminatedUnionType.singleProperty(value);
                case "noProperties":
                    return RapiddocsIr.dynamic.SingleDiscriminatedUnionType.noProperties(value);
                default:
                    return value as RapiddocsIr.dynamic.SingleDiscriminatedUnionType;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace SingleDiscriminatedUnionType {
    export type Raw =
        | SingleDiscriminatedUnionType.SamePropertiesAsObject
        | SingleDiscriminatedUnionType.SingleProperty
        | SingleDiscriminatedUnionType.NoProperties;

    export interface SamePropertiesAsObject extends SingleDiscriminatedUnionTypeObject.Raw {
        type: "samePropertiesAsObject";
    }

    export interface SingleProperty extends SingleDiscriminatedUnionTypeSingleProperty.Raw {
        type: "singleProperty";
    }

    export interface NoProperties extends SingleDiscriminatedUnionTypeNoProperties.Raw {
        type: "noProperties";
    }
}
