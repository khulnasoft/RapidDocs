{
    "endpoints": [
        {
            "id": {
                "path": "/token",
                "method": "POST",
                "identifier_override": "endpoint_auth.getToken"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\trapiddocs \"github.com/any-auth/rapiddocs\"\n\trapiddocsclient \"github.com/any-auth/rapiddocs/client\"\n\toption \"github.com/any-auth/rapiddocs/option\"\n)\n\nclient := rapiddocsclient.NewClient(\n\toption.WithToken(\n\t\t\"\u003cYOUR_AUTH_TOKEN\u003e\",\n\t),\n)\nresponse, err := client.Auth.GetToken(\n\tcontext.TODO(),\n\t\u0026rapiddocs.GetTokenRequest{\n\t\tClientId:     \"client_id\",\n\t\tClientSecret: \"client_secret\",\n\t},\n)\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "POST",
                "identifier_override": "endpoint_user.get"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\trapiddocsclient \"github.com/any-auth/rapiddocs/client\"\n\toption \"github.com/any-auth/rapiddocs/option\"\n)\n\nclient := rapiddocsclient.NewClient(\n\toption.WithToken(\n\t\t\"\u003cYOUR_AUTH_TOKEN\u003e\",\n\t),\n)\nresponse, err := client.User.Get(\n\tcontext.TODO(),\n)\n"
            }
        }
    ]
}