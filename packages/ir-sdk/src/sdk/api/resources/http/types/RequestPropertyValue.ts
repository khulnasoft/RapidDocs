/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as RapiddocsIr from "../../../index";

export type RequestPropertyValue = RapiddocsIr.RequestPropertyValue.Query | RapiddocsIr.RequestPropertyValue.Body;

export namespace RequestPropertyValue {
    export interface Query extends RapiddocsIr.QueryParameter, _Utils {
        type: "query";
    }

    export interface Body extends RapiddocsIr.ObjectProperty, _Utils {
        type: "body";
    }

    export interface _Utils {
        _visit: <_Result>(visitor: RapiddocsIr.RequestPropertyValue._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        query: (value: RapiddocsIr.QueryParameter) => _Result;
        body: (value: RapiddocsIr.ObjectProperty) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const RequestPropertyValue = {
    query: (value: RapiddocsIr.QueryParameter): RapiddocsIr.RequestPropertyValue.Query => {
        return {
            ...value,
            type: "query",
            _visit: function <_Result>(
                this: RapiddocsIr.RequestPropertyValue.Query,
                visitor: RapiddocsIr.RequestPropertyValue._Visitor<_Result>,
            ) {
                return RapiddocsIr.RequestPropertyValue._visit(this, visitor);
            },
        };
    },

    body: (value: RapiddocsIr.ObjectProperty): RapiddocsIr.RequestPropertyValue.Body => {
        return {
            ...value,
            type: "body",
            _visit: function <_Result>(
                this: RapiddocsIr.RequestPropertyValue.Body,
                visitor: RapiddocsIr.RequestPropertyValue._Visitor<_Result>,
            ) {
                return RapiddocsIr.RequestPropertyValue._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: RapiddocsIr.RequestPropertyValue,
        visitor: RapiddocsIr.RequestPropertyValue._Visitor<_Result>,
    ): _Result => {
        switch (value.type) {
            case "query":
                return visitor.query(value);
            case "body":
                return visitor.body(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
