/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as RapiddocsIr from "../../../index";

export type ExampleTypeReferenceShape =
    | RapiddocsIr.ExampleTypeReferenceShape.Primitive
    | RapiddocsIr.ExampleTypeReferenceShape.Container
    | RapiddocsIr.ExampleTypeReferenceShape.Unknown
    | RapiddocsIr.ExampleTypeReferenceShape.Named;

export namespace ExampleTypeReferenceShape {
    export interface Primitive extends _Utils {
        type: "primitive";
        primitive: RapiddocsIr.ExamplePrimitive;
    }

    export interface Container extends _Utils {
        type: "container";
        container: RapiddocsIr.ExampleContainer;
    }

    export interface Unknown extends _Utils {
        type: "unknown";
        unknown: unknown;
    }

    export interface Named extends RapiddocsIr.ExampleNamedType, _Utils {
        type: "named";
    }

    export interface _Utils {
        _visit: <_Result>(visitor: RapiddocsIr.ExampleTypeReferenceShape._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        primitive: (value: RapiddocsIr.ExamplePrimitive) => _Result;
        container: (value: RapiddocsIr.ExampleContainer) => _Result;
        unknown: (value: unknown) => _Result;
        named: (value: RapiddocsIr.ExampleNamedType) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ExampleTypeReferenceShape = {
    primitive: (value: RapiddocsIr.ExamplePrimitive): RapiddocsIr.ExampleTypeReferenceShape.Primitive => {
        return {
            primitive: value,
            type: "primitive",
            _visit: function <_Result>(
                this: RapiddocsIr.ExampleTypeReferenceShape.Primitive,
                visitor: RapiddocsIr.ExampleTypeReferenceShape._Visitor<_Result>,
            ) {
                return RapiddocsIr.ExampleTypeReferenceShape._visit(this, visitor);
            },
        };
    },

    container: (value: RapiddocsIr.ExampleContainer): RapiddocsIr.ExampleTypeReferenceShape.Container => {
        return {
            container: value,
            type: "container",
            _visit: function <_Result>(
                this: RapiddocsIr.ExampleTypeReferenceShape.Container,
                visitor: RapiddocsIr.ExampleTypeReferenceShape._Visitor<_Result>,
            ) {
                return RapiddocsIr.ExampleTypeReferenceShape._visit(this, visitor);
            },
        };
    },

    unknown: (value?: unknown): RapiddocsIr.ExampleTypeReferenceShape.Unknown => {
        return {
            unknown: value,
            type: "unknown",
            _visit: function <_Result>(
                this: RapiddocsIr.ExampleTypeReferenceShape.Unknown,
                visitor: RapiddocsIr.ExampleTypeReferenceShape._Visitor<_Result>,
            ) {
                return RapiddocsIr.ExampleTypeReferenceShape._visit(this, visitor);
            },
        };
    },

    named: (value: RapiddocsIr.ExampleNamedType): RapiddocsIr.ExampleTypeReferenceShape.Named => {
        return {
            ...value,
            type: "named",
            _visit: function <_Result>(
                this: RapiddocsIr.ExampleTypeReferenceShape.Named,
                visitor: RapiddocsIr.ExampleTypeReferenceShape._Visitor<_Result>,
            ) {
                return RapiddocsIr.ExampleTypeReferenceShape._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: RapiddocsIr.ExampleTypeReferenceShape,
        visitor: RapiddocsIr.ExampleTypeReferenceShape._Visitor<_Result>,
    ): _Result => {
        switch (value.type) {
            case "primitive":
                return visitor.primitive(value.primitive);
            case "container":
                return visitor.container(value.container);
            case "unknown":
                return visitor.unknown(value.unknown);
            case "named":
                return visitor.named(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
