/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as serializers from "../../../index";
import * as RapiddocsIr from "../../../../api/index";
import * as core from "../../../../core";
import { GithubPublish } from "./GithubPublish";
import { DirectPublish } from "./DirectPublish";

export const PublishingConfig: core.serialization.Schema<serializers.PublishingConfig.Raw, RapiddocsIr.PublishingConfig> =
    core.serialization
        .union("type", {
            github: GithubPublish,
            direct: DirectPublish,
        })
        .transform<RapiddocsIr.PublishingConfig>({
            transform: (value) => {
                switch (value.type) {
                    case "github":
                        return RapiddocsIr.PublishingConfig.github(value);
                    case "direct":
                        return RapiddocsIr.PublishingConfig.direct(value);
                    default:
                        return value as RapiddocsIr.PublishingConfig;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace PublishingConfig {
    export type Raw = PublishingConfig.Github | PublishingConfig.Direct;

    export interface Github extends GithubPublish.Raw {
        type: "github";
    }

    export interface Direct extends DirectPublish.Raw {
        type: "direct";
    }
}
