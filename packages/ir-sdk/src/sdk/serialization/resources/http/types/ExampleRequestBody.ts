/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as serializers from "../../../index";
import * as RapiddocsIr from "../../../../api/index";
import * as core from "../../../../core";
import { ExampleInlinedRequestBody } from "./ExampleInlinedRequestBody";

export const ExampleRequestBody: core.serialization.Schema<
    serializers.ExampleRequestBody.Raw,
    RapiddocsIr.ExampleRequestBody
> = core.serialization
    .union("type", {
        inlinedRequestBody: ExampleInlinedRequestBody,
        reference: core.serialization.lazyObject(() => serializers.ExampleTypeReference),
    })
    .transform<RapiddocsIr.ExampleRequestBody>({
        transform: (value) => {
            switch (value.type) {
                case "inlinedRequestBody":
                    return RapiddocsIr.ExampleRequestBody.inlinedRequestBody(value);
                case "reference":
                    return RapiddocsIr.ExampleRequestBody.reference(value);
                default:
                    return value as RapiddocsIr.ExampleRequestBody;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace ExampleRequestBody {
    export type Raw = ExampleRequestBody.InlinedRequestBody | ExampleRequestBody.Reference;

    export interface InlinedRequestBody extends ExampleInlinedRequestBody.Raw {
        type: "inlinedRequestBody";
    }

    export interface Reference extends serializers.ExampleTypeReference.Raw {
        type: "reference";
    }
}
