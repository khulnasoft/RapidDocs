{
    "endpoints": [
        {
            "id": {
                "path": "/payment",
                "method": "POST",
                "identifier_override": "endpoint_payment.create"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\trapiddocs \"github.com/idempotency-headers/rapiddocs\"\n\trapiddocsclient \"github.com/idempotency-headers/rapiddocs/client\"\n\toption \"github.com/idempotency-headers/rapiddocs/option\"\n)\n\nclient := rapiddocsclient.NewClient(\n\toption.WithToken(\n\t\t\"\u003cYOUR_AUTH_TOKEN\u003e\",\n\t),\n)\nresponse, err := client.Payment.Create(\n\tcontext.TODO(),\n\t\u0026rapiddocs.CreatePaymentRequest{\n\t\tAmount:   1,\n\t\tCurrency: rapiddocs.CurrencyUsd,\n\t},\n)\n"
            }
        },
        {
            "id": {
                "path": "/payment/{paymentId}",
                "method": "DELETE",
                "identifier_override": "endpoint_payment.delete"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\trapiddocsclient \"github.com/idempotency-headers/rapiddocs/client\"\n\toption \"github.com/idempotency-headers/rapiddocs/option\"\n)\n\nclient := rapiddocsclient.NewClient(\n\toption.WithToken(\n\t\t\"\u003cYOUR_AUTH_TOKEN\u003e\",\n\t),\n)\nerr := client.Payment.Delete(\n\tcontext.TODO(),\n\t\"paymentId\",\n)\n"
            }
        }
    ]
}