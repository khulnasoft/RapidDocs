# This file was auto-generated by Rapiddocs from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import typing_extensions
from ..core.serialization import FieldMetadata
from .metadata import Metadata
from .indexed_data import IndexedData
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class QueryColumn(UniversalBaseModel):
    values: typing.List[float]
    top_k: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="topK")] = None
    namespace: typing.Optional[str] = None
    filter: typing.Optional[Metadata] = None
    indexed_data: typing_extensions.Annotated[typing.Optional[IndexedData], FieldMetadata(alias="indexedData")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
