{
    "endpoints": [
        {
            "id": {
                "path": "/users",
                "method": "DELETE",
                "identifier_override": "endpoint_nullable.deleteUser"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\trapiddocs \"github.com/nullable/rapiddocs\"\n\trapiddocsclient \"github.com/nullable/rapiddocs/client\"\n)\n\nclient := rapiddocsclient.NewClient()\nresponse, err := client.Nullable.DeleteUser(\n\tcontext.TODO(),\n\t\u0026rapiddocs.DeleteUserRequest{\n\t\tUsername: rapiddocs.String(\n\t\t\t\"xy\",\n\t\t),\n\t},\n)\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "GET",
                "identifier_override": "endpoint_nullable.getUsers"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\trapiddocs \"github.com/nullable/rapiddocs\"\n\trapiddocsclient \"github.com/nullable/rapiddocs/client\"\n)\n\nclient := rapiddocsclient.NewClient()\nresponse, err := client.Nullable.GetUsers(\n\tcontext.TODO(),\n\t\u0026rapiddocs.GetUsersRequest{\n\t\tUsernames: []*string{\n\t\t\trapiddocs.String(\n\t\t\t\t\"usernames\",\n\t\t\t),\n\t\t},\n\t\tAvatar: rapiddocs.String(\n\t\t\t\"avatar\",\n\t\t),\n\t\tActivated: []*bool{\n\t\t\trapiddocs.Bool(\n\t\t\t\ttrue,\n\t\t\t),\n\t\t},\n\t\tTags: []**string{\n\t\t\trapiddocs.String(\n\t\t\t\t\"tags\",\n\t\t\t),\n\t\t},\n\t\tExtra: rapiddocs.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "POST",
                "identifier_override": "endpoint_nullable.createUser"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\trapiddocs \"github.com/nullable/rapiddocs\"\n\trapiddocsclient \"github.com/nullable/rapiddocs/client\"\n)\n\nclient := rapiddocsclient.NewClient()\nresponse, err := client.Nullable.CreateUser(\n\tcontext.TODO(),\n\t\u0026rapiddocs.CreateUserRequest{\n\t\tUsername: \"username\",\n\t\tTags: []string{\n\t\t\t\"tags\",\n\t\t\t\"tags\",\n\t\t},\n\t\tMetadata: \u0026rapiddocs.Metadata{\n\t\t\tCreatedAt: rapiddocs.MustParseDateTime(\n\t\t\t\t\"2024-01-15T09:30:00Z\",\n\t\t\t),\n\t\t\tUpdatedAt: rapiddocs.MustParseDateTime(\n\t\t\t\t\"2024-01-15T09:30:00Z\",\n\t\t\t),\n\t\t\tAvatar: rapiddocs.String(\n\t\t\t\t\"avatar\",\n\t\t\t),\n\t\t\tActivated: rapiddocs.Bool(\n\t\t\t\ttrue,\n\t\t\t),\n\t\t},\n\t\tAvatar: rapiddocs.String(\n\t\t\t\"avatar\",\n\t\t),\n\t},\n)\n"
            }
        }
    ]
}