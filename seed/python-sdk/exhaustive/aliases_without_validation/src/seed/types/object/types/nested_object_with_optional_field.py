# This file was auto-generated by Rapiddocs from our API Definition.

from ....core.unchecked_base_model import UncheckedBaseModel
import typing
from .object_with_optional_field import ObjectWithOptionalField
import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class NestedObjectWithOptionalField(UncheckedBaseModel):
    string: typing.Optional[str] = None
    nested_object: typing.Optional[ObjectWithOptionalField] = pydantic.Field(alias="NestedObject", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
