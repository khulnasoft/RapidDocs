/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as RapiddocsIr from "../../../index";

export type ContainerType =
    | RapiddocsIr.ContainerType.List
    | RapiddocsIr.ContainerType.Map
    | RapiddocsIr.ContainerType.Nullable
    | RapiddocsIr.ContainerType.Optional
    | RapiddocsIr.ContainerType.Set
    | RapiddocsIr.ContainerType.Literal;

export namespace ContainerType {
    export interface List extends _Utils {
        type: "list";
        list: RapiddocsIr.TypeReference;
    }

    export interface Map extends RapiddocsIr.MapType, _Utils {
        type: "map";
    }

    export interface Nullable extends _Utils {
        type: "nullable";
        nullable: RapiddocsIr.TypeReference;
    }

    export interface Optional extends _Utils {
        type: "optional";
        optional: RapiddocsIr.TypeReference;
    }

    export interface Set extends _Utils {
        type: "set";
        set: RapiddocsIr.TypeReference;
    }

    export interface Literal extends _Utils {
        type: "literal";
        literal: RapiddocsIr.Literal;
    }

    export interface _Utils {
        _visit: <_Result>(visitor: RapiddocsIr.ContainerType._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        list: (value: RapiddocsIr.TypeReference) => _Result;
        map: (value: RapiddocsIr.MapType) => _Result;
        nullable: (value: RapiddocsIr.TypeReference) => _Result;
        optional: (value: RapiddocsIr.TypeReference) => _Result;
        set: (value: RapiddocsIr.TypeReference) => _Result;
        literal: (value: RapiddocsIr.Literal) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ContainerType = {
    list: (value: RapiddocsIr.TypeReference): RapiddocsIr.ContainerType.List => {
        return {
            list: value,
            type: "list",
            _visit: function <_Result>(
                this: RapiddocsIr.ContainerType.List,
                visitor: RapiddocsIr.ContainerType._Visitor<_Result>,
            ) {
                return RapiddocsIr.ContainerType._visit(this, visitor);
            },
        };
    },

    map: (value: RapiddocsIr.MapType): RapiddocsIr.ContainerType.Map => {
        return {
            ...value,
            type: "map",
            _visit: function <_Result>(
                this: RapiddocsIr.ContainerType.Map,
                visitor: RapiddocsIr.ContainerType._Visitor<_Result>,
            ) {
                return RapiddocsIr.ContainerType._visit(this, visitor);
            },
        };
    },

    nullable: (value: RapiddocsIr.TypeReference): RapiddocsIr.ContainerType.Nullable => {
        return {
            nullable: value,
            type: "nullable",
            _visit: function <_Result>(
                this: RapiddocsIr.ContainerType.Nullable,
                visitor: RapiddocsIr.ContainerType._Visitor<_Result>,
            ) {
                return RapiddocsIr.ContainerType._visit(this, visitor);
            },
        };
    },

    optional: (value: RapiddocsIr.TypeReference): RapiddocsIr.ContainerType.Optional => {
        return {
            optional: value,
            type: "optional",
            _visit: function <_Result>(
                this: RapiddocsIr.ContainerType.Optional,
                visitor: RapiddocsIr.ContainerType._Visitor<_Result>,
            ) {
                return RapiddocsIr.ContainerType._visit(this, visitor);
            },
        };
    },

    set: (value: RapiddocsIr.TypeReference): RapiddocsIr.ContainerType.Set => {
        return {
            set: value,
            type: "set",
            _visit: function <_Result>(
                this: RapiddocsIr.ContainerType.Set,
                visitor: RapiddocsIr.ContainerType._Visitor<_Result>,
            ) {
                return RapiddocsIr.ContainerType._visit(this, visitor);
            },
        };
    },

    literal: (value: RapiddocsIr.Literal): RapiddocsIr.ContainerType.Literal => {
        return {
            literal: value,
            type: "literal",
            _visit: function <_Result>(
                this: RapiddocsIr.ContainerType.Literal,
                visitor: RapiddocsIr.ContainerType._Visitor<_Result>,
            ) {
                return RapiddocsIr.ContainerType._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: RapiddocsIr.ContainerType, visitor: RapiddocsIr.ContainerType._Visitor<_Result>): _Result => {
        switch (value.type) {
            case "list":
                return visitor.list(value.list);
            case "map":
                return visitor.map(value);
            case "nullable":
                return visitor.nullable(value.nullable);
            case "optional":
                return visitor.optional(value.optional);
            case "set":
                return visitor.set(value.set);
            case "literal":
                return visitor.literal(value.literal);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
