/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as RapiddocsOpenapiIr from "../../../index";

export type OneOfSchema = RapiddocsOpenapiIr.OneOfSchema.Discriminated | RapiddocsOpenapiIr.OneOfSchema.Undiscriminated;

export namespace OneOfSchema {
    export interface Discriminated extends RapiddocsOpenapiIr.DiscriminatedOneOfSchema, _Utils {
        type: "discriminated";
    }

    export interface Undiscriminated extends RapiddocsOpenapiIr.UnDiscriminatedOneOfSchema, _Utils {
        type: "undiscriminated";
    }

    export interface _Utils {
        _visit: <_Result>(visitor: RapiddocsOpenapiIr.OneOfSchema._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        discriminated: (value: RapiddocsOpenapiIr.DiscriminatedOneOfSchema) => _Result;
        undiscriminated: (value: RapiddocsOpenapiIr.UnDiscriminatedOneOfSchema) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const OneOfSchema = {
    discriminated: (value: RapiddocsOpenapiIr.DiscriminatedOneOfSchema): RapiddocsOpenapiIr.OneOfSchema.Discriminated => {
        return {
            ...value,
            type: "discriminated",
            _visit: function <_Result>(
                this: RapiddocsOpenapiIr.OneOfSchema.Discriminated,
                visitor: RapiddocsOpenapiIr.OneOfSchema._Visitor<_Result>,
            ) {
                return RapiddocsOpenapiIr.OneOfSchema._visit(this, visitor);
            },
        };
    },

    undiscriminated: (value: RapiddocsOpenapiIr.UnDiscriminatedOneOfSchema): RapiddocsOpenapiIr.OneOfSchema.Undiscriminated => {
        return {
            ...value,
            type: "undiscriminated",
            _visit: function <_Result>(
                this: RapiddocsOpenapiIr.OneOfSchema.Undiscriminated,
                visitor: RapiddocsOpenapiIr.OneOfSchema._Visitor<_Result>,
            ) {
                return RapiddocsOpenapiIr.OneOfSchema._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: RapiddocsOpenapiIr.OneOfSchema,
        visitor: RapiddocsOpenapiIr.OneOfSchema._Visitor<_Result>,
    ): _Result => {
        switch (value.type) {
            case "discriminated":
                return visitor.discriminated(value);
            case "undiscriminated":
                return visitor.undiscriminated(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
