/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as serializers from "../../../index";
import * as RapiddocsIr from "../../../../api/index";
import * as core from "../../../../core";
import { DeclaredTypeName } from "./DeclaredTypeName";
import { SingleUnionTypeProperty } from "./SingleUnionTypeProperty";

export const SingleUnionTypeProperties: core.serialization.Schema<
    serializers.SingleUnionTypeProperties.Raw,
    RapiddocsIr.SingleUnionTypeProperties
> = core.serialization
    .union(core.serialization.discriminant("propertiesType", "_type"), {
        samePropertiesAsObject: DeclaredTypeName,
        singleProperty: SingleUnionTypeProperty,
        noProperties: core.serialization.object({}),
    })
    .transform<RapiddocsIr.SingleUnionTypeProperties>({
        transform: (value) => {
            switch (value.propertiesType) {
                case "samePropertiesAsObject":
                    return RapiddocsIr.SingleUnionTypeProperties.samePropertiesAsObject(value);
                case "singleProperty":
                    return RapiddocsIr.SingleUnionTypeProperties.singleProperty(value);
                case "noProperties":
                    return RapiddocsIr.SingleUnionTypeProperties.noProperties();
                default:
                    return value as RapiddocsIr.SingleUnionTypeProperties;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace SingleUnionTypeProperties {
    export type Raw =
        | SingleUnionTypeProperties.SamePropertiesAsObject
        | SingleUnionTypeProperties.SingleProperty
        | SingleUnionTypeProperties.NoProperties;

    export interface SamePropertiesAsObject extends DeclaredTypeName.Raw {
        _type: "samePropertiesAsObject";
    }

    export interface SingleProperty extends SingleUnionTypeProperty.Raw {
        _type: "singleProperty";
    }

    export interface NoProperties {
        _type: "noProperties";
    }
}
