/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as serializers from "../index";
import * as SeedObject from "../../api/index";
import * as core from "../../core";
import { DiscriminatedUnion1InlineType1 } from "./DiscriminatedUnion1InlineType1";
import { DiscriminatedUnion1InlineType2 } from "./DiscriminatedUnion1InlineType2";
import { ReferenceType } from "./ReferenceType";

export const DiscriminatedUnion1: core.serialization.Schema<
    serializers.DiscriminatedUnion1.Raw,
    SeedObject.DiscriminatedUnion1
> = core.serialization
    .union("type", {
        type1: DiscriminatedUnion1InlineType1,
        type2: DiscriminatedUnion1InlineType2,
        ref: ReferenceType,
    })
    .transform<SeedObject.DiscriminatedUnion1>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace DiscriminatedUnion1 {
    type Raw = DiscriminatedUnion1.Type1 | DiscriminatedUnion1.Type2 | DiscriminatedUnion1.Ref;

    interface Type1 extends DiscriminatedUnion1InlineType1.Raw {
        type: "type1";
    }

    interface Type2 extends DiscriminatedUnion1InlineType2.Raw {
        type: "type2";
    }

    interface Ref extends ReferenceType.Raw {
        type: "ref";
    }
}
