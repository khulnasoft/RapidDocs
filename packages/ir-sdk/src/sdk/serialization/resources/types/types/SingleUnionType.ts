/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as serializers from "../../../index";
import * as RapiddocsIr from "../../../../api/index";
import * as core from "../../../../core";
import { NameAndWireValue } from "../../commons/types/NameAndWireValue";
import { SingleUnionTypeProperties } from "./SingleUnionTypeProperties";
import { Availability } from "../../commons/types/Availability";
import { WithDocs } from "../../commons/types/WithDocs";

export const SingleUnionType: core.serialization.ObjectSchema<serializers.SingleUnionType.Raw, RapiddocsIr.SingleUnionType> =
    core.serialization
        .objectWithoutOptionalProperties({
            discriminantValue: NameAndWireValue,
            shape: SingleUnionTypeProperties,
            displayName: core.serialization.string().optional(),
            availability: Availability.optional(),
        })
        .extend(WithDocs);

export declare namespace SingleUnionType {
    export interface Raw extends WithDocs.Raw {
        discriminantValue: NameAndWireValue.Raw;
        shape: SingleUnionTypeProperties.Raw;
        displayName?: string | null;
        availability?: Availability.Raw | null;
    }
}
