/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as serializers from "../../../index";
import * as RapiddocsIr from "../../../../api/index";
import * as core from "../../../../core";
import { EnumValue } from "./EnumValue";

export const NamedTypeDefault: core.serialization.Schema<serializers.NamedTypeDefault.Raw, RapiddocsIr.NamedTypeDefault> =
    core.serialization
        .union("type", {
            enum: EnumValue,
        })
        .transform<RapiddocsIr.NamedTypeDefault>({
            transform: (value) => {
                switch (value.type) {
                    case "enum":
                        return RapiddocsIr.NamedTypeDefault.enum(value);
                    default:
                        return value as RapiddocsIr.NamedTypeDefault;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace NamedTypeDefault {
    export type Raw = NamedTypeDefault.Enum;

    export interface Enum extends EnumValue.Raw {
        type: "enum";
    }
}
