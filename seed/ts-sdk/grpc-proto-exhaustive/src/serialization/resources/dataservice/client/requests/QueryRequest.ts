/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as serializers from "../../../../index";
import * as SeedApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { Metadata } from "../../../../types/Metadata";
import { QueryColumn } from "../../../../types/QueryColumn";
import { IndexedData } from "../../../../types/IndexedData";

export const QueryRequest: core.serialization.Schema<serializers.QueryRequest.Raw, SeedApi.QueryRequest> =
    core.serialization.object({
        namespace: core.serialization.string().optional(),
        topK: core.serialization.number(),
        filter: Metadata.optional(),
        includeValues: core.serialization.boolean().optional(),
        includeMetadata: core.serialization.boolean().optional(),
        queries: core.serialization.list(QueryColumn).optional(),
        column: core.serialization.list(core.serialization.number()).optional(),
        id: core.serialization.string().optional(),
        indexedData: IndexedData.optional(),
    });

export declare namespace QueryRequest {
    export interface Raw {
        namespace?: string | null;
        topK: number;
        filter?: Metadata.Raw | null;
        includeValues?: boolean | null;
        includeMetadata?: boolean | null;
        queries?: QueryColumn.Raw[] | null;
        column?: number[] | null;
        id?: string | null;
        indexedData?: IndexedData.Raw | null;
    }
}
