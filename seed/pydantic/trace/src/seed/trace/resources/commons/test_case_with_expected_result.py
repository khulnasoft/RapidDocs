# This file was auto-generated by Rapiddocs from our API Definition.

from __future__ import annotations
from ...core.pydantic_utilities import UniversalBaseModel
from .key_value_pair import KeyValuePair
from .map_value import MapValue
from .test_case import TestCase
import pydantic
from .variable_value import VariableValue
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
from ...core.pydantic_utilities import update_forward_refs


class TestCaseWithExpectedResult(UniversalBaseModel):
    test_case: TestCase = pydantic.Field(alias="testCase")
    expected_result: VariableValue = pydantic.Field(alias="expectedResult")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


update_forward_refs(KeyValuePair, TestCaseWithExpectedResult=TestCaseWithExpectedResult)
update_forward_refs(MapValue, TestCaseWithExpectedResult=TestCaseWithExpectedResult)
