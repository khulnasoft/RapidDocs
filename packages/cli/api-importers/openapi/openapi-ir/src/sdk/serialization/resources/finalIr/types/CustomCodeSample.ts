/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as serializers from "../../../index";
import * as RapiddocsOpenapiIr from "../../../../api/index";
import * as core from "../../../../core";
import { CustomCodeSampleLanguage } from "./CustomCodeSampleLanguage";
import { CustomCodeSampleSdk } from "./CustomCodeSampleSdk";

export const CustomCodeSample: core.serialization.Schema<
    serializers.CustomCodeSample.Raw,
    RapiddocsOpenapiIr.CustomCodeSample
> = core.serialization
    .union("type", {
        language: CustomCodeSampleLanguage,
        sdk: CustomCodeSampleSdk,
    })
    .transform<RapiddocsOpenapiIr.CustomCodeSample>({
        transform: (value) => {
            switch (value.type) {
                case "language":
                    return RapiddocsOpenapiIr.CustomCodeSample.language(value);
                case "sdk":
                    return RapiddocsOpenapiIr.CustomCodeSample.sdk(value);
                default:
                    return value as RapiddocsOpenapiIr.CustomCodeSample;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace CustomCodeSample {
    export type Raw = CustomCodeSample.Language | CustomCodeSample.Sdk;

    export interface Language extends CustomCodeSampleLanguage.Raw {
        type: "language";
    }

    export interface Sdk extends CustomCodeSampleSdk.Raw {
        type: "sdk";
    }
}
