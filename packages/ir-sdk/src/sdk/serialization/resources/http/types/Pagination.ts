/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as serializers from "../../../index";
import * as RapiddocsIr from "../../../../api/index";
import * as core from "../../../../core";
import { CursorPagination } from "./CursorPagination";
import { OffsetPagination } from "./OffsetPagination";
import { CustomPagination } from "./CustomPagination";

export const Pagination: core.serialization.Schema<serializers.Pagination.Raw, RapiddocsIr.Pagination> = core.serialization
    .union("type", {
        cursor: CursorPagination,
        offset: OffsetPagination,
        custom: CustomPagination,
    })
    .transform<RapiddocsIr.Pagination>({
        transform: (value) => {
            switch (value.type) {
                case "cursor":
                    return RapiddocsIr.Pagination.cursor(value);
                case "offset":
                    return RapiddocsIr.Pagination.offset(value);
                case "custom":
                    return RapiddocsIr.Pagination.custom(value);
                default:
                    return value as RapiddocsIr.Pagination;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace Pagination {
    export type Raw = Pagination.Cursor | Pagination.Offset | Pagination.Custom;

    export interface Cursor extends CursorPagination.Raw {
        type: "cursor";
    }

    export interface Offset extends OffsetPagination.Raw {
        type: "offset";
    }

    export interface Custom extends CustomPagination.Raw {
        type: "custom";
    }
}
