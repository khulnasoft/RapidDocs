/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as serializers from "../../../index";
import * as RapiddocsIr from "../../../../api/index";
import * as core from "../../../../core";
import { DeclaredErrorName } from "./DeclaredErrorName";
import { NameAndWireValue } from "../../commons/types/NameAndWireValue";
import { ExampleError } from "./ExampleError";
import { WithDocs } from "../../commons/types/WithDocs";

export const ErrorDeclaration: core.serialization.ObjectSchema<
    serializers.ErrorDeclaration.Raw,
    RapiddocsIr.ErrorDeclaration
> = core.serialization
    .objectWithoutOptionalProperties({
        name: DeclaredErrorName,
        discriminantValue: NameAndWireValue,
        type: core.serialization.lazy(() => serializers.TypeReference).optional(),
        statusCode: core.serialization.number(),
        examples: core.serialization.list(ExampleError),
    })
    .extend(WithDocs);

export declare namespace ErrorDeclaration {
    export interface Raw extends WithDocs.Raw {
        name: DeclaredErrorName.Raw;
        discriminantValue: NameAndWireValue.Raw;
        type?: serializers.TypeReference.Raw | null;
        statusCode: number;
        examples: ExampleError.Raw[];
    }
}
