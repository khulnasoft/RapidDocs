# This file was auto-generated by Rapiddocs from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .metadata import Metadata
import typing_extensions
from .indexed_data import IndexedData
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Column(UniversalBaseModel):
    id: str
    values: typing.List[float]
    metadata: typing.Optional[Metadata] = None
    indexed_data: typing_extensions.Annotated[typing.Optional[IndexedData], FieldMetadata(alias="indexedData")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
