/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as RapiddocsIr from "../../../index";

export type NamedTypeDefault = RapiddocsIr.NamedTypeDefault.Enum;

export namespace NamedTypeDefault {
    export interface Enum extends RapiddocsIr.EnumValue, _Utils {
        type: "enum";
    }

    export interface _Utils {
        _visit: <_Result>(visitor: RapiddocsIr.NamedTypeDefault._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        enum: (value: RapiddocsIr.EnumValue) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const NamedTypeDefault = {
    enum: (value: RapiddocsIr.EnumValue): RapiddocsIr.NamedTypeDefault.Enum => {
        return {
            ...value,
            type: "enum",
            _visit: function <_Result>(
                this: RapiddocsIr.NamedTypeDefault.Enum,
                visitor: RapiddocsIr.NamedTypeDefault._Visitor<_Result>,
            ) {
                return RapiddocsIr.NamedTypeDefault._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: RapiddocsIr.NamedTypeDefault, visitor: RapiddocsIr.NamedTypeDefault._Visitor<_Result>): _Result => {
        switch (value.type) {
            case "enum":
                return visitor.enum(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
