# This file was auto-generated by Rapiddocs from our API Definition.

from __future__ import annotations
from .....core.pydantic_utilities import UniversalBaseModel
from ....commons.list_type import ListType
from ....commons.map_type import MapType
import typing
from .parameter import Parameter
from ....commons.variable_type import VariableType
import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2
from .....core.pydantic_utilities import update_forward_refs


class VoidFunctionSignatureThatTakesActualResult(UniversalBaseModel):
    parameters: typing.List[Parameter]
    actual_result_type: VariableType = pydantic.Field(alias="actualResultType")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


update_forward_refs(ListType, VoidFunctionSignatureThatTakesActualResult=VoidFunctionSignatureThatTakesActualResult)
update_forward_refs(MapType, VoidFunctionSignatureThatTakesActualResult=VoidFunctionSignatureThatTakesActualResult)
