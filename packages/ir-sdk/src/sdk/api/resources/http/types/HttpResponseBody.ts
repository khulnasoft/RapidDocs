/**
 * This file was auto-generated by Rapiddocs from our API Definition.
 */

import * as RapiddocsIr from "../../../index";

export type HttpResponseBody =
    | RapiddocsIr.HttpResponseBody.Json
    | RapiddocsIr.HttpResponseBody.FileDownload
    | RapiddocsIr.HttpResponseBody.Text
    | RapiddocsIr.HttpResponseBody.Bytes
    | RapiddocsIr.HttpResponseBody.Streaming
    /**
     * If there is a parameter that controls whether the response is streaming or not. Note
     * that if this is the response then `sdkRequest.streamParameter` will always be populated.
     *  */
    | RapiddocsIr.HttpResponseBody.StreamParameter;

export namespace HttpResponseBody {
    export interface Json extends _Utils {
        type: "json";
        value: RapiddocsIr.JsonResponse;
    }

    export interface FileDownload extends RapiddocsIr.FileDownloadResponse, _Utils {
        type: "fileDownload";
    }

    export interface Text extends RapiddocsIr.TextResponse, _Utils {
        type: "text";
    }

    export interface Bytes extends RapiddocsIr.BytesResponse, _Utils {
        type: "bytes";
    }

    export interface Streaming extends _Utils {
        type: "streaming";
        value: RapiddocsIr.StreamingResponse;
    }

    export interface StreamParameter extends RapiddocsIr.StreamParameterResponse, _Utils {
        type: "streamParameter";
    }

    export interface _Utils {
        _visit: <_Result>(visitor: RapiddocsIr.HttpResponseBody._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        json: (value: RapiddocsIr.JsonResponse) => _Result;
        fileDownload: (value: RapiddocsIr.FileDownloadResponse) => _Result;
        text: (value: RapiddocsIr.TextResponse) => _Result;
        bytes: (value: RapiddocsIr.BytesResponse) => _Result;
        streaming: (value: RapiddocsIr.StreamingResponse) => _Result;
        streamParameter: (value: RapiddocsIr.StreamParameterResponse) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const HttpResponseBody = {
    json: (value: RapiddocsIr.JsonResponse): RapiddocsIr.HttpResponseBody.Json => {
        return {
            value: value,
            type: "json",
            _visit: function <_Result>(
                this: RapiddocsIr.HttpResponseBody.Json,
                visitor: RapiddocsIr.HttpResponseBody._Visitor<_Result>,
            ) {
                return RapiddocsIr.HttpResponseBody._visit(this, visitor);
            },
        };
    },

    fileDownload: (value: RapiddocsIr.FileDownloadResponse): RapiddocsIr.HttpResponseBody.FileDownload => {
        return {
            ...value,
            type: "fileDownload",
            _visit: function <_Result>(
                this: RapiddocsIr.HttpResponseBody.FileDownload,
                visitor: RapiddocsIr.HttpResponseBody._Visitor<_Result>,
            ) {
                return RapiddocsIr.HttpResponseBody._visit(this, visitor);
            },
        };
    },

    text: (value: RapiddocsIr.TextResponse): RapiddocsIr.HttpResponseBody.Text => {
        return {
            ...value,
            type: "text",
            _visit: function <_Result>(
                this: RapiddocsIr.HttpResponseBody.Text,
                visitor: RapiddocsIr.HttpResponseBody._Visitor<_Result>,
            ) {
                return RapiddocsIr.HttpResponseBody._visit(this, visitor);
            },
        };
    },

    bytes: (value: RapiddocsIr.BytesResponse): RapiddocsIr.HttpResponseBody.Bytes => {
        return {
            ...value,
            type: "bytes",
            _visit: function <_Result>(
                this: RapiddocsIr.HttpResponseBody.Bytes,
                visitor: RapiddocsIr.HttpResponseBody._Visitor<_Result>,
            ) {
                return RapiddocsIr.HttpResponseBody._visit(this, visitor);
            },
        };
    },

    streaming: (value: RapiddocsIr.StreamingResponse): RapiddocsIr.HttpResponseBody.Streaming => {
        return {
            value: value,
            type: "streaming",
            _visit: function <_Result>(
                this: RapiddocsIr.HttpResponseBody.Streaming,
                visitor: RapiddocsIr.HttpResponseBody._Visitor<_Result>,
            ) {
                return RapiddocsIr.HttpResponseBody._visit(this, visitor);
            },
        };
    },

    streamParameter: (value: RapiddocsIr.StreamParameterResponse): RapiddocsIr.HttpResponseBody.StreamParameter => {
        return {
            ...value,
            type: "streamParameter",
            _visit: function <_Result>(
                this: RapiddocsIr.HttpResponseBody.StreamParameter,
                visitor: RapiddocsIr.HttpResponseBody._Visitor<_Result>,
            ) {
                return RapiddocsIr.HttpResponseBody._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: RapiddocsIr.HttpResponseBody, visitor: RapiddocsIr.HttpResponseBody._Visitor<_Result>): _Result => {
        switch (value.type) {
            case "json":
                return visitor.json(value.value);
            case "fileDownload":
                return visitor.fileDownload(value);
            case "text":
                return visitor.text(value);
            case "bytes":
                return visitor.bytes(value);
            case "streaming":
                return visitor.streaming(value.value);
            case "streamParameter":
                return visitor.streamParameter(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
